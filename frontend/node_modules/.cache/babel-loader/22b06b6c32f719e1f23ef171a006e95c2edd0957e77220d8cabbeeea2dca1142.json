{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport hash from '@emotion/hash';\nimport { ATTR_TOKEN, CSS_IN_JS_INSTANCE, CSS_IN_JS_INSTANCE_ID } from \"../StyleContext\";\nimport useGlobalCache from \"./useGlobalCache\";\nimport { flattenToken, token2key } from \"../util\";\nvar EMPTY_OVERRIDE = {}; // Generate different prefix to make user selector break in production env.\n// This helps developer not to do style override directly on the hash id.\n\nvar hashPrefix = process.env.NODE_ENV !== 'production' ? 'css-dev-only-do-not-override' : 'css';\nvar tokenKeys = new Map();\nfunction recordCleanToken(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);\n}\nfunction removeStyleTags(key) {\n  if (typeof document !== 'undefined') {\n    var styles = document.querySelectorAll(\"style[\".concat(ATTR_TOKEN, \"=\\\"\").concat(key, \"\\\"]\"));\n    styles.forEach(function (style) {\n      if (style[CSS_IN_JS_INSTANCE] === CSS_IN_JS_INSTANCE_ID) {\n        var _style$parentNode;\n        (_style$parentNode = style.parentNode) === null || _style$parentNode === void 0 ? void 0 : _style$parentNode.removeChild(style);\n      }\n    });\n  }\n} // Remove will check current keys first\n\nfunction cleanTokenStyle(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);\n  var tokenKeyList = Array.from(tokenKeys.keys());\n  var cleanableKeyList = tokenKeyList.filter(function (key) {\n    var count = tokenKeys.get(key) || 0;\n    return count <= 0;\n  });\n  if (cleanableKeyList.length < tokenKeyList.length) {\n    cleanableKeyList.forEach(function (key) {\n      removeStyleTags(key);\n      tokenKeys.delete(key);\n    });\n  }\n}\n/**\n * Cache theme derivative token as global shared one\n * @param theme Theme entity\n * @param tokens List of tokens, used for cache. Please do not dynamic generate object directly\n * @param option Additional config\n * @returns Call Theme.getDerivativeToken(tokenObject) to get token\n */\n\nexport default function useCacheToken(theme, tokens) {\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _option$salt = option.salt,\n    salt = _option$salt === void 0 ? '' : _option$salt,\n    _option$override = option.override,\n    override = _option$override === void 0 ? EMPTY_OVERRIDE : _option$override,\n    formatToken = option.formatToken; // Basic - We do basic cache here\n\n  var mergedToken = React.useMemo(function () {\n    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(tokens)));\n  }, [tokens]);\n  var tokenStr = React.useMemo(function () {\n    return flattenToken(mergedToken);\n  }, [mergedToken]);\n  var overrideTokenStr = React.useMemo(function () {\n    return flattenToken(override);\n  }, [override]);\n  var cachedToken = useGlobalCache('token', [salt, theme.id, tokenStr, overrideTokenStr], function () {\n    var derivativeToken = theme.getDerivativeToken(mergedToken); // Merge with override\n\n    var mergedDerivativeToken = _objectSpread(_objectSpread({}, derivativeToken), override); // Format if needed\n\n    if (formatToken) {\n      mergedDerivativeToken = formatToken(mergedDerivativeToken);\n    } // Optimize for `useStyleRegister` performance\n\n    var tokenKey = token2key(mergedDerivativeToken, salt);\n    mergedDerivativeToken._tokenKey = tokenKey;\n    recordCleanToken(tokenKey);\n    var hashId = \"\".concat(hashPrefix, \"-\").concat(hash(tokenKey));\n    mergedDerivativeToken._hashId = hashId; // Not used\n\n    return [mergedDerivativeToken, hashId];\n  }, function (cache) {\n    // Remove token will remove all related style\n    cleanTokenStyle(cache[0]._tokenKey);\n  });\n  return cachedToken;\n}","map":{"version":3,"names":["_objectSpread","_toConsumableArray","React","hash","ATTR_TOKEN","CSS_IN_JS_INSTANCE","CSS_IN_JS_INSTANCE_ID","useGlobalCache","flattenToken","token2key","EMPTY_OVERRIDE","hashPrefix","process","env","NODE_ENV","tokenKeys","Map","recordCleanToken","tokenKey","set","get","removeStyleTags","key","document","styles","querySelectorAll","concat","forEach","style","_style$parentNode","parentNode","removeChild","cleanTokenStyle","tokenKeyList","Array","from","keys","cleanableKeyList","filter","count","length","delete","useCacheToken","theme","tokens","option","arguments","undefined","_option$salt","salt","_option$override","override","formatToken","mergedToken","useMemo","Object","assign","apply","tokenStr","overrideTokenStr","cachedToken","id","derivativeToken","getDerivativeToken","mergedDerivativeToken","_tokenKey","hashId","_hashId","cache"],"sources":["C:/Users/nimes/OneDrive/Desktop/Project/Imageupload/frontend/node_modules/@ant-design/cssinjs/es/hooks/useCacheToken.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport hash from '@emotion/hash';\nimport { ATTR_TOKEN, CSS_IN_JS_INSTANCE, CSS_IN_JS_INSTANCE_ID } from \"../StyleContext\";\nimport useGlobalCache from \"./useGlobalCache\";\nimport { flattenToken, token2key } from \"../util\";\nvar EMPTY_OVERRIDE = {}; // Generate different prefix to make user selector break in production env.\n// This helps developer not to do style override directly on the hash id.\n\nvar hashPrefix = process.env.NODE_ENV !== 'production' ? 'css-dev-only-do-not-override' : 'css';\nvar tokenKeys = new Map();\n\nfunction recordCleanToken(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);\n}\n\nfunction removeStyleTags(key) {\n  if (typeof document !== 'undefined') {\n    var styles = document.querySelectorAll(\"style[\".concat(ATTR_TOKEN, \"=\\\"\").concat(key, \"\\\"]\"));\n    styles.forEach(function (style) {\n      if (style[CSS_IN_JS_INSTANCE] === CSS_IN_JS_INSTANCE_ID) {\n        var _style$parentNode;\n\n        (_style$parentNode = style.parentNode) === null || _style$parentNode === void 0 ? void 0 : _style$parentNode.removeChild(style);\n      }\n    });\n  }\n} // Remove will check current keys first\n\n\nfunction cleanTokenStyle(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);\n  var tokenKeyList = Array.from(tokenKeys.keys());\n  var cleanableKeyList = tokenKeyList.filter(function (key) {\n    var count = tokenKeys.get(key) || 0;\n    return count <= 0;\n  });\n\n  if (cleanableKeyList.length < tokenKeyList.length) {\n    cleanableKeyList.forEach(function (key) {\n      removeStyleTags(key);\n      tokenKeys.delete(key);\n    });\n  }\n}\n/**\n * Cache theme derivative token as global shared one\n * @param theme Theme entity\n * @param tokens List of tokens, used for cache. Please do not dynamic generate object directly\n * @param option Additional config\n * @returns Call Theme.getDerivativeToken(tokenObject) to get token\n */\n\n\nexport default function useCacheToken(theme, tokens) {\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _option$salt = option.salt,\n      salt = _option$salt === void 0 ? '' : _option$salt,\n      _option$override = option.override,\n      override = _option$override === void 0 ? EMPTY_OVERRIDE : _option$override,\n      formatToken = option.formatToken; // Basic - We do basic cache here\n\n  var mergedToken = React.useMemo(function () {\n    return Object.assign.apply(Object, [{}].concat(_toConsumableArray(tokens)));\n  }, [tokens]);\n  var tokenStr = React.useMemo(function () {\n    return flattenToken(mergedToken);\n  }, [mergedToken]);\n  var overrideTokenStr = React.useMemo(function () {\n    return flattenToken(override);\n  }, [override]);\n  var cachedToken = useGlobalCache('token', [salt, theme.id, tokenStr, overrideTokenStr], function () {\n    var derivativeToken = theme.getDerivativeToken(mergedToken); // Merge with override\n\n    var mergedDerivativeToken = _objectSpread(_objectSpread({}, derivativeToken), override); // Format if needed\n\n\n    if (formatToken) {\n      mergedDerivativeToken = formatToken(mergedDerivativeToken);\n    } // Optimize for `useStyleRegister` performance\n\n\n    var tokenKey = token2key(mergedDerivativeToken, salt);\n    mergedDerivativeToken._tokenKey = tokenKey;\n    recordCleanToken(tokenKey);\n    var hashId = \"\".concat(hashPrefix, \"-\").concat(hash(tokenKey));\n    mergedDerivativeToken._hashId = hashId; // Not used\n\n    return [mergedDerivativeToken, hashId];\n  }, function (cache) {\n    // Remove token will remove all related style\n    cleanTokenStyle(cache[0]._tokenKey);\n  });\n  return cachedToken;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}