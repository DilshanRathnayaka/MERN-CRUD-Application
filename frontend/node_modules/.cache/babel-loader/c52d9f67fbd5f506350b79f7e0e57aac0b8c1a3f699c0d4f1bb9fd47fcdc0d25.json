{"ast":null,"code":"import * as React from 'react';\nimport { DescriptionsContext } from '.';\nimport Cell from './Cell';\nfunction renderCells(items, _ref, _ref2) {\n  let {\n    colon,\n    prefixCls,\n    bordered\n  } = _ref;\n  let {\n    component,\n    type,\n    showLabel,\n    showContent,\n    labelStyle: rootLabelStyle,\n    contentStyle: rootContentStyle\n  } = _ref2;\n  return items.map((_ref3, index) => {\n    let {\n      props: {\n        label,\n        children,\n        prefixCls: itemPrefixCls = prefixCls,\n        className,\n        style,\n        labelStyle,\n        contentStyle,\n        span = 1\n      },\n      key\n    } = _ref3;\n    if (typeof component === 'string') {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: `${type}-${key || index}`,\n        className: className,\n        style: style,\n        labelStyle: Object.assign(Object.assign({}, rootLabelStyle), labelStyle),\n        contentStyle: Object.assign(Object.assign({}, rootContentStyle), contentStyle),\n        span: span,\n        colon: colon,\n        component: component,\n        itemPrefixCls: itemPrefixCls,\n        bordered: bordered,\n        label: showLabel ? label : null,\n        content: showContent ? children : null\n      });\n    }\n    return [/*#__PURE__*/React.createElement(Cell, {\n      key: `label-${key || index}`,\n      className: className,\n      style: Object.assign(Object.assign(Object.assign({}, rootLabelStyle), style), labelStyle),\n      span: 1,\n      colon: colon,\n      component: component[0],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      label: label\n    }), /*#__PURE__*/React.createElement(Cell, {\n      key: `content-${key || index}`,\n      className: className,\n      style: Object.assign(Object.assign(Object.assign({}, rootContentStyle), style), contentStyle),\n      span: span * 2 - 1,\n      component: component[1],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      content: children\n    })];\n  });\n}\nconst Row = props => {\n  const descContext = React.useContext(DescriptionsContext);\n  const {\n    prefixCls,\n    vertical,\n    row,\n    index,\n    bordered\n  } = props;\n  if (vertical) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n      key: `label-${index}`,\n      className: `${prefixCls}-row`\n    }, renderCells(row, props, Object.assign({\n      component: 'th',\n      type: 'label',\n      showLabel: true\n    }, descContext))), /*#__PURE__*/React.createElement(\"tr\", {\n      key: `content-${index}`,\n      className: `${prefixCls}-row`\n    }, renderCells(row, props, Object.assign({\n      component: 'td',\n      type: 'content',\n      showContent: true\n    }, descContext))));\n  }\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: `${prefixCls}-row`\n  }, renderCells(row, props, Object.assign({\n    component: bordered ? ['th', 'td'] : 'td',\n    type: 'item',\n    showLabel: true,\n    showContent: true\n  }, descContext)));\n};\nexport default Row;","map":{"version":3,"names":["React","DescriptionsContext","Cell","renderCells","items","_ref","_ref2","colon","prefixCls","bordered","component","type","showLabel","showContent","labelStyle","rootLabelStyle","contentStyle","rootContentStyle","map","_ref3","index","props","label","children","itemPrefixCls","className","style","span","key","createElement","Object","assign","content","Row","descContext","useContext","vertical","row","Fragment"],"sources":["C:/Users/nimes/OneDrive/Desktop/Project/Imageupload/frontend/node_modules/antd/es/descriptions/Row.js"],"sourcesContent":["import * as React from 'react';\nimport { DescriptionsContext } from '.';\nimport Cell from './Cell';\nfunction renderCells(items, _ref, _ref2) {\n  let {\n    colon,\n    prefixCls,\n    bordered\n  } = _ref;\n  let {\n    component,\n    type,\n    showLabel,\n    showContent,\n    labelStyle: rootLabelStyle,\n    contentStyle: rootContentStyle\n  } = _ref2;\n  return items.map((_ref3, index) => {\n    let {\n      props: {\n        label,\n        children,\n        prefixCls: itemPrefixCls = prefixCls,\n        className,\n        style,\n        labelStyle,\n        contentStyle,\n        span = 1\n      },\n      key\n    } = _ref3;\n    if (typeof component === 'string') {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: `${type}-${key || index}`,\n        className: className,\n        style: style,\n        labelStyle: Object.assign(Object.assign({}, rootLabelStyle), labelStyle),\n        contentStyle: Object.assign(Object.assign({}, rootContentStyle), contentStyle),\n        span: span,\n        colon: colon,\n        component: component,\n        itemPrefixCls: itemPrefixCls,\n        bordered: bordered,\n        label: showLabel ? label : null,\n        content: showContent ? children : null\n      });\n    }\n    return [/*#__PURE__*/React.createElement(Cell, {\n      key: `label-${key || index}`,\n      className: className,\n      style: Object.assign(Object.assign(Object.assign({}, rootLabelStyle), style), labelStyle),\n      span: 1,\n      colon: colon,\n      component: component[0],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      label: label\n    }), /*#__PURE__*/React.createElement(Cell, {\n      key: `content-${key || index}`,\n      className: className,\n      style: Object.assign(Object.assign(Object.assign({}, rootContentStyle), style), contentStyle),\n      span: span * 2 - 1,\n      component: component[1],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      content: children\n    })];\n  });\n}\nconst Row = props => {\n  const descContext = React.useContext(DescriptionsContext);\n  const {\n    prefixCls,\n    vertical,\n    row,\n    index,\n    bordered\n  } = props;\n  if (vertical) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n      key: `label-${index}`,\n      className: `${prefixCls}-row`\n    }, renderCells(row, props, Object.assign({\n      component: 'th',\n      type: 'label',\n      showLabel: true\n    }, descContext))), /*#__PURE__*/React.createElement(\"tr\", {\n      key: `content-${index}`,\n      className: `${prefixCls}-row`\n    }, renderCells(row, props, Object.assign({\n      component: 'td',\n      type: 'content',\n      showContent: true\n    }, descContext))));\n  }\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: `${prefixCls}-row`\n  }, renderCells(row, props, Object.assign({\n    component: bordered ? ['th', 'td'] : 'td',\n    type: 'item',\n    showLabel: true,\n    showContent: true\n  }, descContext)));\n};\nexport default Row;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,GAAG;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,WAAW,CAACC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAE;EACvC,IAAI;IACFC,KAAK;IACLC,SAAS;IACTC;EACF,CAAC,GAAGJ,IAAI;EACR,IAAI;IACFK,SAAS;IACTC,IAAI;IACJC,SAAS;IACTC,WAAW;IACXC,UAAU,EAAEC,cAAc;IAC1BC,YAAY,EAAEC;EAChB,CAAC,GAAGX,KAAK;EACT,OAAOF,KAAK,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;IACjC,IAAI;MACFC,KAAK,EAAE;QACLC,KAAK;QACLC,QAAQ;QACRf,SAAS,EAAEgB,aAAa,GAAGhB,SAAS;QACpCiB,SAAS;QACTC,KAAK;QACLZ,UAAU;QACVE,YAAY;QACZW,IAAI,GAAG;MACT,CAAC;MACDC;IACF,CAAC,GAAGT,KAAK;IACT,IAAI,OAAOT,SAAS,KAAK,QAAQ,EAAE;MACjC,OAAO,aAAaV,KAAK,CAAC6B,aAAa,CAAC3B,IAAI,EAAE;QAC5C0B,GAAG,EAAG,GAAEjB,IAAK,IAAGiB,GAAG,IAAIR,KAAM,EAAC;QAC9BK,SAAS,EAAEA,SAAS;QACpBC,KAAK,EAAEA,KAAK;QACZZ,UAAU,EAAEgB,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEhB,cAAc,CAAC,EAAED,UAAU,CAAC;QACxEE,YAAY,EAAEc,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEd,gBAAgB,CAAC,EAAED,YAAY,CAAC;QAC9EW,IAAI,EAAEA,IAAI;QACVpB,KAAK,EAAEA,KAAK;QACZG,SAAS,EAAEA,SAAS;QACpBc,aAAa,EAAEA,aAAa;QAC5Bf,QAAQ,EAAEA,QAAQ;QAClBa,KAAK,EAAEV,SAAS,GAAGU,KAAK,GAAG,IAAI;QAC/BU,OAAO,EAAEnB,WAAW,GAAGU,QAAQ,GAAG;MACpC,CAAC,CAAC;IACJ;IACA,OAAO,CAAC,aAAavB,KAAK,CAAC6B,aAAa,CAAC3B,IAAI,EAAE;MAC7C0B,GAAG,EAAG,SAAQA,GAAG,IAAIR,KAAM,EAAC;MAC5BK,SAAS,EAAEA,SAAS;MACpBC,KAAK,EAAEI,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEhB,cAAc,CAAC,EAAEW,KAAK,CAAC,EAAEZ,UAAU,CAAC;MACzFa,IAAI,EAAE,CAAC;MACPpB,KAAK,EAAEA,KAAK;MACZG,SAAS,EAAEA,SAAS,CAAC,CAAC,CAAC;MACvBc,aAAa,EAAEA,aAAa;MAC5Bf,QAAQ,EAAEA,QAAQ;MAClBa,KAAK,EAAEA;IACT,CAAC,CAAC,EAAE,aAAatB,KAAK,CAAC6B,aAAa,CAAC3B,IAAI,EAAE;MACzC0B,GAAG,EAAG,WAAUA,GAAG,IAAIR,KAAM,EAAC;MAC9BK,SAAS,EAAEA,SAAS;MACpBC,KAAK,EAAEI,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEd,gBAAgB,CAAC,EAAES,KAAK,CAAC,EAAEV,YAAY,CAAC;MAC7FW,IAAI,EAAEA,IAAI,GAAG,CAAC,GAAG,CAAC;MAClBjB,SAAS,EAAEA,SAAS,CAAC,CAAC,CAAC;MACvBc,aAAa,EAAEA,aAAa;MAC5Bf,QAAQ,EAAEA,QAAQ;MAClBuB,OAAO,EAAET;IACX,CAAC,CAAC,CAAC;EACL,CAAC,CAAC;AACJ;AACA,MAAMU,GAAG,GAAGZ,KAAK,IAAI;EACnB,MAAMa,WAAW,GAAGlC,KAAK,CAACmC,UAAU,CAAClC,mBAAmB,CAAC;EACzD,MAAM;IACJO,SAAS;IACT4B,QAAQ;IACRC,GAAG;IACHjB,KAAK;IACLX;EACF,CAAC,GAAGY,KAAK;EACT,IAAIe,QAAQ,EAAE;IACZ,OAAO,aAAapC,KAAK,CAAC6B,aAAa,CAAC7B,KAAK,CAACsC,QAAQ,EAAE,IAAI,EAAE,aAAatC,KAAK,CAAC6B,aAAa,CAAC,IAAI,EAAE;MACnGD,GAAG,EAAG,SAAQR,KAAM,EAAC;MACrBK,SAAS,EAAG,GAAEjB,SAAU;IAC1B,CAAC,EAAEL,WAAW,CAACkC,GAAG,EAAEhB,KAAK,EAAES,MAAM,CAACC,MAAM,CAAC;MACvCrB,SAAS,EAAE,IAAI;MACfC,IAAI,EAAE,OAAO;MACbC,SAAS,EAAE;IACb,CAAC,EAAEsB,WAAW,CAAC,CAAC,CAAC,EAAE,aAAalC,KAAK,CAAC6B,aAAa,CAAC,IAAI,EAAE;MACxDD,GAAG,EAAG,WAAUR,KAAM,EAAC;MACvBK,SAAS,EAAG,GAAEjB,SAAU;IAC1B,CAAC,EAAEL,WAAW,CAACkC,GAAG,EAAEhB,KAAK,EAAES,MAAM,CAACC,MAAM,CAAC;MACvCrB,SAAS,EAAE,IAAI;MACfC,IAAI,EAAE,SAAS;MACfE,WAAW,EAAE;IACf,CAAC,EAAEqB,WAAW,CAAC,CAAC,CAAC,CAAC;EACpB;EACA,OAAO,aAAalC,KAAK,CAAC6B,aAAa,CAAC,IAAI,EAAE;IAC5CD,GAAG,EAAER,KAAK;IACVK,SAAS,EAAG,GAAEjB,SAAU;EAC1B,CAAC,EAAEL,WAAW,CAACkC,GAAG,EAAEhB,KAAK,EAAES,MAAM,CAACC,MAAM,CAAC;IACvCrB,SAAS,EAAED,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,IAAI;IACzCE,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE,IAAI;IACfC,WAAW,EAAE;EACf,CAAC,EAAEqB,WAAW,CAAC,CAAC,CAAC;AACnB,CAAC;AACD,eAAeD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}