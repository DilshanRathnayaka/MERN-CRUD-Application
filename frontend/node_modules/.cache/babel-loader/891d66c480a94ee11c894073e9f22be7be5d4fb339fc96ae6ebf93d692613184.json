{"ast":null,"code":"import * as React from 'react';\nimport Cell from \"../Cell\";\nimport ExpandedRowContext from \"../context/ExpandedRowContext\";\nimport TableContext from \"../context/TableContext\";\nimport { useContextSelector } from \"../ContextSelector\";\nfunction ExpandedRow(_ref) {\n  var prefixCls = _ref.prefixCls,\n    children = _ref.children,\n    Component = _ref.component,\n    cellComponent = _ref.cellComponent,\n    className = _ref.className,\n    expanded = _ref.expanded,\n    colSpan = _ref.colSpan,\n    isEmpty = _ref.isEmpty;\n  var scrollbarSize = useContextSelector(TableContext, 'scrollbarSize');\n  var _useContextSelector = useContextSelector(ExpandedRowContext, ['fixHeader', 'fixColumn', 'componentWidth', 'horizonScroll']),\n    fixHeader = _useContextSelector.fixHeader,\n    fixColumn = _useContextSelector.fixColumn,\n    componentWidth = _useContextSelector.componentWidth,\n    horizonScroll = _useContextSelector.horizonScroll; // Cache render node\n\n  return React.useMemo(function () {\n    var contentNode = children;\n    if (isEmpty ? horizonScroll : fixColumn) {\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: componentWidth - (fixHeader ? scrollbarSize : 0),\n          position: 'sticky',\n          left: 0,\n          overflow: 'hidden'\n        },\n        className: \"\".concat(prefixCls, \"-expanded-row-fixed\")\n      }, componentWidth !== 0 && contentNode);\n    }\n    return /*#__PURE__*/React.createElement(Component, {\n      className: className,\n      style: {\n        display: expanded ? null : 'none'\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      component: cellComponent,\n      prefixCls: prefixCls,\n      colSpan: colSpan\n    }, contentNode));\n  }, [children, Component, className, expanded, colSpan, isEmpty, scrollbarSize, componentWidth, fixColumn, fixHeader, horizonScroll]);\n}\nexport default ExpandedRow;","map":{"version":3,"names":["React","Cell","ExpandedRowContext","TableContext","useContextSelector","ExpandedRow","_ref","prefixCls","children","Component","component","cellComponent","className","expanded","colSpan","isEmpty","scrollbarSize","_useContextSelector","fixHeader","fixColumn","componentWidth","horizonScroll","useMemo","contentNode","createElement","style","width","position","left","overflow","concat","display"],"sources":["C:/Users/nimes/OneDrive/Desktop/Project/Imageupload/frontend/node_modules/rc-table/es/Body/ExpandedRow.js"],"sourcesContent":["import * as React from 'react';\nimport Cell from \"../Cell\";\nimport ExpandedRowContext from \"../context/ExpandedRowContext\";\nimport TableContext from \"../context/TableContext\";\nimport { useContextSelector } from \"../ContextSelector\";\n\nfunction ExpandedRow(_ref) {\n  var prefixCls = _ref.prefixCls,\n      children = _ref.children,\n      Component = _ref.component,\n      cellComponent = _ref.cellComponent,\n      className = _ref.className,\n      expanded = _ref.expanded,\n      colSpan = _ref.colSpan,\n      isEmpty = _ref.isEmpty;\n  var scrollbarSize = useContextSelector(TableContext, 'scrollbarSize');\n\n  var _useContextSelector = useContextSelector(ExpandedRowContext, ['fixHeader', 'fixColumn', 'componentWidth', 'horizonScroll']),\n      fixHeader = _useContextSelector.fixHeader,\n      fixColumn = _useContextSelector.fixColumn,\n      componentWidth = _useContextSelector.componentWidth,\n      horizonScroll = _useContextSelector.horizonScroll; // Cache render node\n\n\n  return React.useMemo(function () {\n    var contentNode = children;\n\n    if (isEmpty ? horizonScroll : fixColumn) {\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: componentWidth - (fixHeader ? scrollbarSize : 0),\n          position: 'sticky',\n          left: 0,\n          overflow: 'hidden'\n        },\n        className: \"\".concat(prefixCls, \"-expanded-row-fixed\")\n      }, componentWidth !== 0 && contentNode);\n    }\n\n    return /*#__PURE__*/React.createElement(Component, {\n      className: className,\n      style: {\n        display: expanded ? null : 'none'\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      component: cellComponent,\n      prefixCls: prefixCls,\n      colSpan: colSpan\n    }, contentNode));\n  }, [children, Component, className, expanded, colSpan, isEmpty, scrollbarSize, componentWidth, fixColumn, fixHeader, horizonScroll]);\n}\n\nexport default ExpandedRow;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,kBAAkB,MAAM,+BAA+B;AAC9D,OAAOC,YAAY,MAAM,yBAAyB;AAClD,SAASC,kBAAkB,QAAQ,oBAAoB;AAEvD,SAASC,WAAW,CAACC,IAAI,EAAE;EACzB,IAAIC,SAAS,GAAGD,IAAI,CAACC,SAAS;IAC1BC,QAAQ,GAAGF,IAAI,CAACE,QAAQ;IACxBC,SAAS,GAAGH,IAAI,CAACI,SAAS;IAC1BC,aAAa,GAAGL,IAAI,CAACK,aAAa;IAClCC,SAAS,GAAGN,IAAI,CAACM,SAAS;IAC1BC,QAAQ,GAAGP,IAAI,CAACO,QAAQ;IACxBC,OAAO,GAAGR,IAAI,CAACQ,OAAO;IACtBC,OAAO,GAAGT,IAAI,CAACS,OAAO;EAC1B,IAAIC,aAAa,GAAGZ,kBAAkB,CAACD,YAAY,EAAE,eAAe,CAAC;EAErE,IAAIc,mBAAmB,GAAGb,kBAAkB,CAACF,kBAAkB,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,gBAAgB,EAAE,eAAe,CAAC,CAAC;IAC3HgB,SAAS,GAAGD,mBAAmB,CAACC,SAAS;IACzCC,SAAS,GAAGF,mBAAmB,CAACE,SAAS;IACzCC,cAAc,GAAGH,mBAAmB,CAACG,cAAc;IACnDC,aAAa,GAAGJ,mBAAmB,CAACI,aAAa,CAAC,CAAC;;EAGvD,OAAOrB,KAAK,CAACsB,OAAO,CAAC,YAAY;IAC/B,IAAIC,WAAW,GAAGf,QAAQ;IAE1B,IAAIO,OAAO,GAAGM,aAAa,GAAGF,SAAS,EAAE;MACvCI,WAAW,GAAG,aAAavB,KAAK,CAACwB,aAAa,CAAC,KAAK,EAAE;QACpDC,KAAK,EAAE;UACLC,KAAK,EAAEN,cAAc,IAAIF,SAAS,GAAGF,aAAa,GAAG,CAAC,CAAC;UACvDW,QAAQ,EAAE,QAAQ;UAClBC,IAAI,EAAE,CAAC;UACPC,QAAQ,EAAE;QACZ,CAAC;QACDjB,SAAS,EAAE,EAAE,CAACkB,MAAM,CAACvB,SAAS,EAAE,qBAAqB;MACvD,CAAC,EAAEa,cAAc,KAAK,CAAC,IAAIG,WAAW,CAAC;IACzC;IAEA,OAAO,aAAavB,KAAK,CAACwB,aAAa,CAACf,SAAS,EAAE;MACjDG,SAAS,EAAEA,SAAS;MACpBa,KAAK,EAAE;QACLM,OAAO,EAAElB,QAAQ,GAAG,IAAI,GAAG;MAC7B;IACF,CAAC,EAAE,aAAab,KAAK,CAACwB,aAAa,CAACvB,IAAI,EAAE;MACxCS,SAAS,EAAEC,aAAa;MACxBJ,SAAS,EAAEA,SAAS;MACpBO,OAAO,EAAEA;IACX,CAAC,EAAES,WAAW,CAAC,CAAC;EAClB,CAAC,EAAE,CAACf,QAAQ,EAAEC,SAAS,EAAEG,SAAS,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,EAAEC,aAAa,EAAEI,cAAc,EAAED,SAAS,EAAED,SAAS,EAAEG,aAAa,CAAC,CAAC;AACtI;AAEA,eAAehB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}