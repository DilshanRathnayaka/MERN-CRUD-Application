{"ast":null,"code":"import { genComponentStyleHook, mergeToken, PresetColors } from '../../theme/internal';\nimport capitalize from '../../_util/capitalize';\nimport { resetComponent } from '../../style';\nconst genTagStatusStyle = (token, status, cssVariableType) => {\n  const capitalizedCssVariableType = capitalize(cssVariableType);\n  return {\n    [`${token.componentCls}-${status}`]: {\n      color: token[`color${cssVariableType}`],\n      background: token[`color${capitalizedCssVariableType}Bg`],\n      borderColor: token[`color${capitalizedCssVariableType}Border`]\n    }\n  };\n};\n// FIXME: special preset colors\nconst genTagColorStyle = token => PresetColors.reduce((prev, colorKey) => {\n  const lightColor = token[`${colorKey}-1`];\n  const lightBorderColor = token[`${colorKey}-3`];\n  const darkColor = token[`${colorKey}-6`];\n  const textColor = token[`${colorKey}-7`];\n  return Object.assign(Object.assign({}, prev), {\n    [`${token.componentCls}-${colorKey}`]: {\n      color: textColor,\n      background: lightColor,\n      borderColor: lightBorderColor\n    },\n    [`${token.componentCls}-${colorKey}-inverse`]: {\n      color: token.colorTextLightSolid,\n      background: darkColor,\n      borderColor: darkColor\n    }\n  });\n}, {});\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal\n  } = token;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [token.componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: `${token.tagLineHeight}px`,\n      whiteSpace: 'nowrap',\n      background: token.tagDefaultBg,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      // RTL\n      '&&-rtl': {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.tagDefaultColor\n      },\n      [`${token.componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&&-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [`&-checkable`]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        '&:not(&-checked):hover': {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [`&-hidden`]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tag', token => {\n  const {\n    fontSize,\n    lineHeight,\n    lineWidth,\n    fontSizeIcon\n  } = token;\n  const tagHeight = Math.round(fontSize * lineHeight);\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = tagHeight - lineWidth * 2;\n  const tagDefaultBg = token.colorFillAlter;\n  const tagDefaultColor = token.colorText;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagDefaultBg,\n    tagDefaultColor,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8 // Fixed padding.\n  });\n\n  return [genBaseStyle(tagToken), genTagColorStyle(tagToken), genTagStatusStyle(tagToken, 'success', 'Success'), genTagStatusStyle(tagToken, 'processing', 'Info'), genTagStatusStyle(tagToken, 'error', 'Error'), genTagStatusStyle(tagToken, 'warning', 'Warning')];\n});","map":{"version":3,"names":["genComponentStyleHook","mergeToken","PresetColors","capitalize","resetComponent","genTagStatusStyle","token","status","cssVariableType","capitalizedCssVariableType","componentCls","color","background","borderColor","genTagColorStyle","reduce","prev","colorKey","lightColor","lightBorderColor","darkColor","textColor","Object","assign","colorTextLightSolid","genBaseStyle","paddingXXS","lineWidth","tagPaddingHorizontal","paddingInline","iconMarginInline","display","height","marginInlineEnd","marginXS","fontSize","tagFontSize","lineHeight","tagLineHeight","whiteSpace","tagDefaultBg","border","lineType","colorBorder","borderRadius","borderRadiusSM","opacity","transition","motionDurationMid","textAlign","direction","tagDefaultColor","marginInlineStart","colorTextDescription","tagIconSize","cursor","colorTextHeading","iconCls","backgroundColor","colorPrimary","colorFillSecondary","colorPrimaryHover","colorPrimaryActive","fontSizeIcon","tagHeight","Math","round","fontSizeSM","colorFillAlter","colorText","tagToken"],"sources":["C:/Users/nimes/OneDrive/Desktop/Project/Imageupload/frontend/node_modules/antd/es/tag/style/index.js"],"sourcesContent":["import { genComponentStyleHook, mergeToken, PresetColors } from '../../theme/internal';\nimport capitalize from '../../_util/capitalize';\nimport { resetComponent } from '../../style';\nconst genTagStatusStyle = (token, status, cssVariableType) => {\n  const capitalizedCssVariableType = capitalize(cssVariableType);\n  return {\n    [`${token.componentCls}-${status}`]: {\n      color: token[`color${cssVariableType}`],\n      background: token[`color${capitalizedCssVariableType}Bg`],\n      borderColor: token[`color${capitalizedCssVariableType}Border`]\n    }\n  };\n};\n// FIXME: special preset colors\nconst genTagColorStyle = token => PresetColors.reduce((prev, colorKey) => {\n  const lightColor = token[`${colorKey}-1`];\n  const lightBorderColor = token[`${colorKey}-3`];\n  const darkColor = token[`${colorKey}-6`];\n  const textColor = token[`${colorKey}-7`];\n  return Object.assign(Object.assign({}, prev), {\n    [`${token.componentCls}-${colorKey}`]: {\n      color: textColor,\n      background: lightColor,\n      borderColor: lightBorderColor\n    },\n    [`${token.componentCls}-${colorKey}-inverse`]: {\n      color: token.colorTextLightSolid,\n      background: darkColor,\n      borderColor: darkColor\n    }\n  });\n}, {});\nconst genBaseStyle = token => {\n  const {\n    paddingXXS,\n    lineWidth,\n    tagPaddingHorizontal\n  } = token;\n  const paddingInline = tagPaddingHorizontal - lineWidth;\n  const iconMarginInline = paddingXXS - lineWidth;\n  return {\n    // Result\n    [token.componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      height: 'auto',\n      marginInlineEnd: token.marginXS,\n      paddingInline,\n      fontSize: token.tagFontSize,\n      lineHeight: `${token.tagLineHeight}px`,\n      whiteSpace: 'nowrap',\n      background: token.tagDefaultBg,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorBorder}`,\n      borderRadius: token.borderRadiusSM,\n      opacity: 1,\n      transition: `all ${token.motionDurationMid}`,\n      textAlign: 'start',\n      // RTL\n      '&&-rtl': {\n        direction: 'rtl'\n      },\n      '&, a, a:hover': {\n        color: token.tagDefaultColor\n      },\n      [`${token.componentCls}-close-icon`]: {\n        marginInlineStart: iconMarginInline,\n        color: token.colorTextDescription,\n        fontSize: token.tagIconSize,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}`,\n        '&:hover': {\n          color: token.colorTextHeading\n        }\n      },\n      [`&&-has-color`]: {\n        borderColor: 'transparent',\n        [`&, a, a:hover, ${token.iconCls}-close, ${token.iconCls}-close:hover`]: {\n          color: token.colorTextLightSolid\n        }\n      },\n      [`&-checkable`]: {\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n        '&:not(&-checked):hover': {\n          color: token.colorPrimary,\n          backgroundColor: token.colorFillSecondary\n        },\n        '&:active, &-checked': {\n          color: token.colorTextLightSolid\n        },\n        '&-checked': {\n          backgroundColor: token.colorPrimary,\n          '&:hover': {\n            backgroundColor: token.colorPrimaryHover\n          }\n        },\n        '&:active': {\n          backgroundColor: token.colorPrimaryActive\n        }\n      },\n      [`&-hidden`]: {\n        display: 'none'\n      },\n      // To ensure that a space will be placed between character and `Icon`.\n      [`> ${token.iconCls} + span, > span + ${token.iconCls}`]: {\n        marginInlineStart: paddingInline\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tag', token => {\n  const {\n    fontSize,\n    lineHeight,\n    lineWidth,\n    fontSizeIcon\n  } = token;\n  const tagHeight = Math.round(fontSize * lineHeight);\n  const tagFontSize = token.fontSizeSM;\n  const tagLineHeight = tagHeight - lineWidth * 2;\n  const tagDefaultBg = token.colorFillAlter;\n  const tagDefaultColor = token.colorText;\n  const tagToken = mergeToken(token, {\n    tagFontSize,\n    tagLineHeight,\n    tagDefaultBg,\n    tagDefaultColor,\n    tagIconSize: fontSizeIcon - 2 * lineWidth,\n    tagPaddingHorizontal: 8 // Fixed padding.\n  });\n\n  return [genBaseStyle(tagToken), genTagColorStyle(tagToken), genTagStatusStyle(tagToken, 'success', 'Success'), genTagStatusStyle(tagToken, 'processing', 'Info'), genTagStatusStyle(tagToken, 'error', 'Error'), genTagStatusStyle(tagToken, 'warning', 'Warning')];\n});"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,UAAU,EAAEC,YAAY,QAAQ,sBAAsB;AACtF,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,SAASC,cAAc,QAAQ,aAAa;AAC5C,MAAMC,iBAAiB,GAAG,CAACC,KAAK,EAAEC,MAAM,EAAEC,eAAe,KAAK;EAC5D,MAAMC,0BAA0B,GAAGN,UAAU,CAACK,eAAe,CAAC;EAC9D,OAAO;IACL,CAAE,GAAEF,KAAK,CAACI,YAAa,IAAGH,MAAO,EAAC,GAAG;MACnCI,KAAK,EAAEL,KAAK,CAAE,QAAOE,eAAgB,EAAC,CAAC;MACvCI,UAAU,EAAEN,KAAK,CAAE,QAAOG,0BAA2B,IAAG,CAAC;MACzDI,WAAW,EAAEP,KAAK,CAAE,QAAOG,0BAA2B,QAAO;IAC/D;EACF,CAAC;AACH,CAAC;AACD;AACA,MAAMK,gBAAgB,GAAGR,KAAK,IAAIJ,YAAY,CAACa,MAAM,CAAC,CAACC,IAAI,EAAEC,QAAQ,KAAK;EACxE,MAAMC,UAAU,GAAGZ,KAAK,CAAE,GAAEW,QAAS,IAAG,CAAC;EACzC,MAAME,gBAAgB,GAAGb,KAAK,CAAE,GAAEW,QAAS,IAAG,CAAC;EAC/C,MAAMG,SAAS,GAAGd,KAAK,CAAE,GAAEW,QAAS,IAAG,CAAC;EACxC,MAAMI,SAAS,GAAGf,KAAK,CAAE,GAAEW,QAAS,IAAG,CAAC;EACxC,OAAOK,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEP,IAAI,CAAC,EAAE;IAC5C,CAAE,GAAEV,KAAK,CAACI,YAAa,IAAGO,QAAS,EAAC,GAAG;MACrCN,KAAK,EAAEU,SAAS;MAChBT,UAAU,EAAEM,UAAU;MACtBL,WAAW,EAAEM;IACf,CAAC;IACD,CAAE,GAAEb,KAAK,CAACI,YAAa,IAAGO,QAAS,UAAS,GAAG;MAC7CN,KAAK,EAAEL,KAAK,CAACkB,mBAAmB;MAChCZ,UAAU,EAAEQ,SAAS;MACrBP,WAAW,EAAEO;IACf;EACF,CAAC,CAAC;AACJ,CAAC,EAAE,CAAC,CAAC,CAAC;AACN,MAAMK,YAAY,GAAGnB,KAAK,IAAI;EAC5B,MAAM;IACJoB,UAAU;IACVC,SAAS;IACTC;EACF,CAAC,GAAGtB,KAAK;EACT,MAAMuB,aAAa,GAAGD,oBAAoB,GAAGD,SAAS;EACtD,MAAMG,gBAAgB,GAAGJ,UAAU,GAAGC,SAAS;EAC/C,OAAO;IACL;IACA,CAACrB,KAAK,CAACI,YAAY,GAAGY,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEnB,cAAc,CAACE,KAAK,CAAC,CAAC,EAAE;MAC5EyB,OAAO,EAAE,cAAc;MACvBC,MAAM,EAAE,MAAM;MACdC,eAAe,EAAE3B,KAAK,CAAC4B,QAAQ;MAC/BL,aAAa;MACbM,QAAQ,EAAE7B,KAAK,CAAC8B,WAAW;MAC3BC,UAAU,EAAG,GAAE/B,KAAK,CAACgC,aAAc,IAAG;MACtCC,UAAU,EAAE,QAAQ;MACpB3B,UAAU,EAAEN,KAAK,CAACkC,YAAY;MAC9BC,MAAM,EAAG,GAAEnC,KAAK,CAACqB,SAAU,MAAKrB,KAAK,CAACoC,QAAS,IAAGpC,KAAK,CAACqC,WAAY,EAAC;MACrEC,YAAY,EAAEtC,KAAK,CAACuC,cAAc;MAClCC,OAAO,EAAE,CAAC;MACVC,UAAU,EAAG,OAAMzC,KAAK,CAAC0C,iBAAkB,EAAC;MAC5CC,SAAS,EAAE,OAAO;MAClB;MACA,QAAQ,EAAE;QACRC,SAAS,EAAE;MACb,CAAC;MACD,eAAe,EAAE;QACfvC,KAAK,EAAEL,KAAK,CAAC6C;MACf,CAAC;MACD,CAAE,GAAE7C,KAAK,CAACI,YAAa,aAAY,GAAG;QACpC0C,iBAAiB,EAAEtB,gBAAgB;QACnCnB,KAAK,EAAEL,KAAK,CAAC+C,oBAAoB;QACjClB,QAAQ,EAAE7B,KAAK,CAACgD,WAAW;QAC3BC,MAAM,EAAE,SAAS;QACjBR,UAAU,EAAG,OAAMzC,KAAK,CAAC0C,iBAAkB,EAAC;QAC5C,SAAS,EAAE;UACTrC,KAAK,EAAEL,KAAK,CAACkD;QACf;MACF,CAAC;MACD,CAAE,cAAa,GAAG;QAChB3C,WAAW,EAAE,aAAa;QAC1B,CAAE,kBAAiBP,KAAK,CAACmD,OAAQ,WAAUnD,KAAK,CAACmD,OAAQ,cAAa,GAAG;UACvE9C,KAAK,EAAEL,KAAK,CAACkB;QACf;MACF,CAAC;MACD,CAAE,aAAY,GAAG;QACfkC,eAAe,EAAE,aAAa;QAC9B7C,WAAW,EAAE,aAAa;QAC1B0C,MAAM,EAAE,SAAS;QACjB,wBAAwB,EAAE;UACxB5C,KAAK,EAAEL,KAAK,CAACqD,YAAY;UACzBD,eAAe,EAAEpD,KAAK,CAACsD;QACzB,CAAC;QACD,qBAAqB,EAAE;UACrBjD,KAAK,EAAEL,KAAK,CAACkB;QACf,CAAC;QACD,WAAW,EAAE;UACXkC,eAAe,EAAEpD,KAAK,CAACqD,YAAY;UACnC,SAAS,EAAE;YACTD,eAAe,EAAEpD,KAAK,CAACuD;UACzB;QACF,CAAC;QACD,UAAU,EAAE;UACVH,eAAe,EAAEpD,KAAK,CAACwD;QACzB;MACF,CAAC;MACD,CAAE,UAAS,GAAG;QACZ/B,OAAO,EAAE;MACX,CAAC;MACD;MACA,CAAE,KAAIzB,KAAK,CAACmD,OAAQ,qBAAoBnD,KAAK,CAACmD,OAAQ,EAAC,GAAG;QACxDL,iBAAiB,EAAEvB;MACrB;IACF,CAAC;EACH,CAAC;AACH,CAAC;AACD;AACA,eAAe7B,qBAAqB,CAAC,KAAK,EAAEM,KAAK,IAAI;EACnD,MAAM;IACJ6B,QAAQ;IACRE,UAAU;IACVV,SAAS;IACToC;EACF,CAAC,GAAGzD,KAAK;EACT,MAAM0D,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAC/B,QAAQ,GAAGE,UAAU,CAAC;EACnD,MAAMD,WAAW,GAAG9B,KAAK,CAAC6D,UAAU;EACpC,MAAM7B,aAAa,GAAG0B,SAAS,GAAGrC,SAAS,GAAG,CAAC;EAC/C,MAAMa,YAAY,GAAGlC,KAAK,CAAC8D,cAAc;EACzC,MAAMjB,eAAe,GAAG7C,KAAK,CAAC+D,SAAS;EACvC,MAAMC,QAAQ,GAAGrE,UAAU,CAACK,KAAK,EAAE;IACjC8B,WAAW;IACXE,aAAa;IACbE,YAAY;IACZW,eAAe;IACfG,WAAW,EAAES,YAAY,GAAG,CAAC,GAAGpC,SAAS;IACzCC,oBAAoB,EAAE,CAAC,CAAC;EAC1B,CAAC,CAAC;;EAEF,OAAO,CAACH,YAAY,CAAC6C,QAAQ,CAAC,EAAExD,gBAAgB,CAACwD,QAAQ,CAAC,EAAEjE,iBAAiB,CAACiE,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC,EAAEjE,iBAAiB,CAACiE,QAAQ,EAAE,YAAY,EAAE,MAAM,CAAC,EAAEjE,iBAAiB,CAACiE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,EAAEjE,iBAAiB,CAACiE,QAAQ,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AACrQ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}