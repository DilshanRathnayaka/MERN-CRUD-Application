{"ast":null,"code":"import HolderOutlined from \"@ant-design/icons/es/icons/HolderOutlined\";\nimport classNames from 'classnames';\nimport RcTree from 'rc-tree';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport initCollapseMotion from '../_util/motion';\nimport dropIndicatorRender from './utils/dropIndicator';\nimport renderSwitcherIcon from './utils/iconUtil';\nimport useStyle from './style';\nconst Tree = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    getPrefixCls,\n    direction,\n    virtual\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    showIcon = false,\n    showLine,\n    switcherIcon,\n    blockNode = false,\n    children,\n    checkable = false,\n    selectable = true,\n    draggable,\n    motion: customMotion\n  } = props;\n  const prefixCls = getPrefixCls('tree', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const motion = customMotion !== null && customMotion !== void 0 ? customMotion : Object.assign(Object.assign({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false\n  });\n  const newProps = Object.assign(Object.assign({}, props), {\n    checkable,\n    selectable,\n    showIcon,\n    motion,\n    blockNode,\n    showLine: Boolean(showLine),\n    dropIndicatorRender\n  });\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const draggableConfig = React.useMemo(() => {\n    if (!draggable) {\n      return false;\n    }\n    let mergedDraggable = {};\n    switch (typeof draggable) {\n      case 'function':\n        mergedDraggable.nodeDraggable = draggable;\n        break;\n      case 'object':\n        mergedDraggable = Object.assign({}, draggable);\n        break;\n      default:\n        break;\n      // Do nothing\n    }\n\n    if (mergedDraggable.icon !== false) {\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(HolderOutlined, null);\n    }\n    return mergedDraggable;\n  }, [draggable]);\n  return wrapSSR( /*#__PURE__*/React.createElement(RcTree, Object.assign({\n    itemHeight: 20,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-icon-hide`]: !showIcon,\n      [`${prefixCls}-block-node`]: blockNode,\n      [`${prefixCls}-unselectable`]: !selectable,\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, className, hashId),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-checkbox-inner`\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: nodeProps => renderSwitcherIcon(prefixCls, switcherIcon, showLine, nodeProps),\n    draggable: draggableConfig\n  }), children));\n});\nexport default Tree;","map":{"version":3,"names":["HolderOutlined","classNames","RcTree","React","ConfigContext","initCollapseMotion","dropIndicatorRender","renderSwitcherIcon","useStyle","Tree","forwardRef","props","ref","getPrefixCls","direction","virtual","useContext","prefixCls","customizePrefixCls","className","showIcon","showLine","switcherIcon","blockNode","children","checkable","selectable","draggable","motion","customMotion","rootPrefixCls","Object","assign","motionAppear","newProps","Boolean","wrapSSR","hashId","draggableConfig","useMemo","mergedDraggable","nodeDraggable","icon","createElement","itemHeight","nodeProps"],"sources":["C:/Users/nimes/OneDrive/Desktop/Project/Imageupload/frontend/node_modules/antd/es/tree/Tree.js"],"sourcesContent":["import HolderOutlined from \"@ant-design/icons/es/icons/HolderOutlined\";\nimport classNames from 'classnames';\nimport RcTree from 'rc-tree';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport initCollapseMotion from '../_util/motion';\nimport dropIndicatorRender from './utils/dropIndicator';\nimport renderSwitcherIcon from './utils/iconUtil';\nimport useStyle from './style';\nconst Tree = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    getPrefixCls,\n    direction,\n    virtual\n  } = React.useContext(ConfigContext);\n  const {\n    prefixCls: customizePrefixCls,\n    className,\n    showIcon = false,\n    showLine,\n    switcherIcon,\n    blockNode = false,\n    children,\n    checkable = false,\n    selectable = true,\n    draggable,\n    motion: customMotion\n  } = props;\n  const prefixCls = getPrefixCls('tree', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const motion = customMotion !== null && customMotion !== void 0 ? customMotion : Object.assign(Object.assign({}, initCollapseMotion(rootPrefixCls)), {\n    motionAppear: false\n  });\n  const newProps = Object.assign(Object.assign({}, props), {\n    checkable,\n    selectable,\n    showIcon,\n    motion,\n    blockNode,\n    showLine: Boolean(showLine),\n    dropIndicatorRender\n  });\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const draggableConfig = React.useMemo(() => {\n    if (!draggable) {\n      return false;\n    }\n    let mergedDraggable = {};\n    switch (typeof draggable) {\n      case 'function':\n        mergedDraggable.nodeDraggable = draggable;\n        break;\n      case 'object':\n        mergedDraggable = Object.assign({}, draggable);\n        break;\n      default:\n        break;\n      // Do nothing\n    }\n\n    if (mergedDraggable.icon !== false) {\n      mergedDraggable.icon = mergedDraggable.icon || /*#__PURE__*/React.createElement(HolderOutlined, null);\n    }\n    return mergedDraggable;\n  }, [draggable]);\n  return wrapSSR( /*#__PURE__*/React.createElement(RcTree, Object.assign({\n    itemHeight: 20,\n    ref: ref,\n    virtual: virtual\n  }, newProps, {\n    prefixCls: prefixCls,\n    className: classNames({\n      [`${prefixCls}-icon-hide`]: !showIcon,\n      [`${prefixCls}-block-node`]: blockNode,\n      [`${prefixCls}-unselectable`]: !selectable,\n      [`${prefixCls}-rtl`]: direction === 'rtl'\n    }, className, hashId),\n    direction: direction,\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-checkbox-inner`\n    }) : checkable,\n    selectable: selectable,\n    switcherIcon: nodeProps => renderSwitcherIcon(prefixCls, switcherIcon, showLine, nodeProps),\n    draggable: draggableConfig\n  }), children));\n});\nexport default Tree;"],"mappings":"AAAA,OAAOA,cAAc,MAAM,2CAA2C;AACtE,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,MAAM,MAAM,SAAS;AAC5B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,kBAAkB,MAAM,iBAAiB;AAChD,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,kBAAkB,MAAM,kBAAkB;AACjD,OAAOC,QAAQ,MAAM,SAAS;AAC9B,MAAMC,IAAI,GAAG,aAAaN,KAAK,CAACO,UAAU,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EACzD,MAAM;IACJC,YAAY;IACZC,SAAS;IACTC;EACF,CAAC,GAAGZ,KAAK,CAACa,UAAU,CAACZ,aAAa,CAAC;EACnC,MAAM;IACJa,SAAS,EAAEC,kBAAkB;IAC7BC,SAAS;IACTC,QAAQ,GAAG,KAAK;IAChBC,QAAQ;IACRC,YAAY;IACZC,SAAS,GAAG,KAAK;IACjBC,QAAQ;IACRC,SAAS,GAAG,KAAK;IACjBC,UAAU,GAAG,IAAI;IACjBC,SAAS;IACTC,MAAM,EAAEC;EACV,CAAC,GAAGlB,KAAK;EACT,MAAMM,SAAS,GAAGJ,YAAY,CAAC,MAAM,EAAEK,kBAAkB,CAAC;EAC1D,MAAMY,aAAa,GAAGjB,YAAY,EAAE;EACpC,MAAMe,MAAM,GAAGC,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAGA,YAAY,GAAGE,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE3B,kBAAkB,CAACyB,aAAa,CAAC,CAAC,EAAE;IACnJG,YAAY,EAAE;EAChB,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGH,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAErB,KAAK,CAAC,EAAE;IACvDc,SAAS;IACTC,UAAU;IACVN,QAAQ;IACRQ,MAAM;IACNL,SAAS;IACTF,QAAQ,EAAEc,OAAO,CAACd,QAAQ,CAAC;IAC3Bf;EACF,CAAC,CAAC;EACF,MAAM,CAAC8B,OAAO,EAAEC,MAAM,CAAC,GAAG7B,QAAQ,CAACS,SAAS,CAAC;EAC7C,MAAMqB,eAAe,GAAGnC,KAAK,CAACoC,OAAO,CAAC,MAAM;IAC1C,IAAI,CAACZ,SAAS,EAAE;MACd,OAAO,KAAK;IACd;IACA,IAAIa,eAAe,GAAG,CAAC,CAAC;IACxB,QAAQ,OAAOb,SAAS;MACtB,KAAK,UAAU;QACba,eAAe,CAACC,aAAa,GAAGd,SAAS;QACzC;MACF,KAAK,QAAQ;QACXa,eAAe,GAAGT,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEL,SAAS,CAAC;QAC9C;MACF;QACE;MACF;IAAA;;IAGF,IAAIa,eAAe,CAACE,IAAI,KAAK,KAAK,EAAE;MAClCF,eAAe,CAACE,IAAI,GAAGF,eAAe,CAACE,IAAI,IAAI,aAAavC,KAAK,CAACwC,aAAa,CAAC3C,cAAc,EAAE,IAAI,CAAC;IACvG;IACA,OAAOwC,eAAe;EACxB,CAAC,EAAE,CAACb,SAAS,CAAC,CAAC;EACf,OAAOS,OAAO,EAAE,aAAajC,KAAK,CAACwC,aAAa,CAACzC,MAAM,EAAE6B,MAAM,CAACC,MAAM,CAAC;IACrEY,UAAU,EAAE,EAAE;IACdhC,GAAG,EAAEA,GAAG;IACRG,OAAO,EAAEA;EACX,CAAC,EAAEmB,QAAQ,EAAE;IACXjB,SAAS,EAAEA,SAAS;IACpBE,SAAS,EAAElB,UAAU,CAAC;MACpB,CAAE,GAAEgB,SAAU,YAAW,GAAG,CAACG,QAAQ;MACrC,CAAE,GAAEH,SAAU,aAAY,GAAGM,SAAS;MACtC,CAAE,GAAEN,SAAU,eAAc,GAAG,CAACS,UAAU;MAC1C,CAAE,GAAET,SAAU,MAAK,GAAGH,SAAS,KAAK;IACtC,CAAC,EAAEK,SAAS,EAAEkB,MAAM,CAAC;IACrBvB,SAAS,EAAEA,SAAS;IACpBW,SAAS,EAAEA,SAAS,GAAG,aAAatB,KAAK,CAACwC,aAAa,CAAC,MAAM,EAAE;MAC9DxB,SAAS,EAAG,GAAEF,SAAU;IAC1B,CAAC,CAAC,GAAGQ,SAAS;IACdC,UAAU,EAAEA,UAAU;IACtBJ,YAAY,EAAEuB,SAAS,IAAItC,kBAAkB,CAACU,SAAS,EAAEK,YAAY,EAAED,QAAQ,EAAEwB,SAAS,CAAC;IAC3FlB,SAAS,EAAEW;EACb,CAAC,CAAC,EAAEd,QAAQ,CAAC,CAAC;AAChB,CAAC,CAAC;AACF,eAAef,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}