{"ast":null,"code":"import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent, textEllipsis } from '../../style';\n// ============================== Mixins ==============================\nfunction segmentedDisabledItem(cls, token) {\n  return {\n    [`${cls}, ${cls}:hover, ${cls}:focus`]: {\n      color: token.colorTextDisabled,\n      cursor: 'not-allowed'\n    }\n  };\n}\nfunction getSegmentedItemSelectedStyle(token) {\n  return {\n    backgroundColor: token.bgColorSelected,\n    boxShadow: token.boxShadow\n  };\n}\nconst segmentedTextEllipsisCss = Object.assign({\n  overflow: 'hidden'\n}, textEllipsis);\n// ============================== Styles ==============================\nconst genSegmentedStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      padding: token.segmentedContainerPadding,\n      color: token.labelColor,\n      backgroundColor: token.bgColor,\n      borderRadius: token.borderRadius,\n      transition: `all ${token.motionDurationMid} ${token.motionEaseInOut}`,\n      [`${componentCls}-group`]: {\n        position: 'relative',\n        display: 'flex',\n        alignItems: 'stretch',\n        justifyItems: 'flex-start',\n        width: '100%'\n      },\n      // RTL styles\n      '&&-rtl': {\n        direction: 'rtl'\n      },\n      // block styles\n      '&&-block': {\n        display: 'flex'\n      },\n      [`&&-block ${componentCls}-item`]: {\n        flex: 1,\n        minWidth: 0\n      },\n      // item styles\n      [`${componentCls}-item`]: {\n        position: 'relative',\n        textAlign: 'center',\n        cursor: 'pointer',\n        transition: `color ${token.motionDurationMid} ${token.motionEaseInOut}`,\n        borderRadius: token.borderRadiusSM,\n        '&-selected': Object.assign(Object.assign({}, getSegmentedItemSelectedStyle(token)), {\n          color: token.labelColorHover\n        }),\n        '&::after': {\n          content: '\"\"',\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          top: 0,\n          insetInlineStart: 0,\n          borderRadius: token.borderRadiusSM,\n          transition: `background-color ${token.motionDurationMid}`\n        },\n        [`&:hover:not(${componentCls}-item-selected):not(${componentCls}-item-disabled)`]: {\n          color: token.labelColorHover,\n          '&::after': {\n            backgroundColor: token.bgColorHover\n          }\n        },\n        '&-label': Object.assign({\n          minHeight: token.controlHeight - token.segmentedContainerPadding * 2,\n          lineHeight: `${token.controlHeight - token.segmentedContainerPadding * 2}px`,\n          padding: `0 ${token.segmentedPaddingHorizontal}px`\n        }, segmentedTextEllipsisCss),\n        // syntactic sugar to add `icon` for Segmented Item\n        '&-icon + *': {\n          marginInlineStart: token.marginSM / 2\n        },\n        '&-input': {\n          position: 'absolute',\n          insetBlockStart: 0,\n          insetInlineStart: 0,\n          width: 0,\n          height: 0,\n          opacity: 0,\n          pointerEvents: 'none'\n        }\n      },\n      // size styles\n      '&&-lg': {\n        borderRadius: token.borderRadiusLG,\n        [`${componentCls}-item-label`]: {\n          minHeight: token.controlHeightLG - token.segmentedContainerPadding * 2,\n          lineHeight: `${token.controlHeightLG - token.segmentedContainerPadding * 2}px`,\n          padding: `0 ${token.segmentedPaddingHorizontal}px`,\n          fontSize: token.fontSizeLG\n        },\n        [`${componentCls}-item-selected`]: {\n          borderRadius: token.borderRadius\n        }\n      },\n      '&&-sm': {\n        borderRadius: token.borderRadiusSM,\n        [`${componentCls}-item-label`]: {\n          minHeight: token.controlHeightSM - token.segmentedContainerPadding * 2,\n          lineHeight: `${token.controlHeightSM - token.segmentedContainerPadding * 2}px`,\n          padding: `0 ${token.segmentedPaddingHorizontalSM}px`\n        },\n        [`${componentCls}-item-selected`]: {\n          borderRadius: token.borderRadiusXS\n        }\n      }\n    }), segmentedDisabledItem(`&-disabled ${componentCls}-item`, token)), segmentedDisabledItem(`${componentCls}-item-disabled`, token)), {\n      // thumb styles\n      [`${componentCls}-thumb`]: Object.assign(Object.assign({}, getSegmentedItemSelectedStyle(token)), {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        width: 0,\n        height: '100%',\n        padding: `${token.paddingXXS}px 0`,\n        borderRadius: token.borderRadiusSM,\n        [`& ~ ${componentCls}-item:not(${componentCls}-item-selected):not(${componentCls}-item-disabled)::after`]: {\n          backgroundColor: 'transparent'\n        }\n      }),\n      // transition effect when `appear-active`\n      [`${componentCls}-thumb-motion-appear-active`]: {\n        transition: `transform ${token.motionDurationSlow} ${token.motionEaseInOut}, width ${token.motionDurationSlow} ${token.motionEaseInOut}`,\n        willChange: 'transform, width'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Segmented', token => {\n  const {\n    lineWidthBold,\n    lineWidth,\n    colorTextLabel,\n    colorText,\n    colorFillSecondary,\n    colorBgLayout,\n    colorBgElevated\n  } = token;\n  const segmentedToken = mergeToken(token, {\n    segmentedPaddingHorizontal: token.controlPaddingHorizontal - lineWidth,\n    segmentedPaddingHorizontalSM: token.controlPaddingHorizontalSM - lineWidth,\n    segmentedContainerPadding: lineWidthBold,\n    labelColor: colorTextLabel,\n    labelColorHover: colorText,\n    bgColor: colorBgLayout,\n    bgColorHover: colorFillSecondary,\n    bgColorSelected: colorBgElevated\n  });\n  return [genSegmentedStyle(segmentedToken)];\n});","map":{"version":3,"names":["genComponentStyleHook","mergeToken","resetComponent","textEllipsis","segmentedDisabledItem","cls","token","color","colorTextDisabled","cursor","getSegmentedItemSelectedStyle","backgroundColor","bgColorSelected","boxShadow","segmentedTextEllipsisCss","Object","assign","overflow","genSegmentedStyle","componentCls","display","padding","segmentedContainerPadding","labelColor","bgColor","borderRadius","transition","motionDurationMid","motionEaseInOut","position","alignItems","justifyItems","width","direction","flex","minWidth","textAlign","borderRadiusSM","labelColorHover","content","height","top","insetInlineStart","bgColorHover","minHeight","controlHeight","lineHeight","segmentedPaddingHorizontal","marginInlineStart","marginSM","insetBlockStart","opacity","pointerEvents","borderRadiusLG","controlHeightLG","fontSize","fontSizeLG","controlHeightSM","segmentedPaddingHorizontalSM","borderRadiusXS","paddingXXS","motionDurationSlow","willChange","lineWidthBold","lineWidth","colorTextLabel","colorText","colorFillSecondary","colorBgLayout","colorBgElevated","segmentedToken","controlPaddingHorizontal","controlPaddingHorizontalSM"],"sources":["C:/Users/nimes/OneDrive/Desktop/Project/Imageupload/frontend/node_modules/antd/es/segmented/style/index.js"],"sourcesContent":["import { genComponentStyleHook, mergeToken } from '../../theme/internal';\nimport { resetComponent, textEllipsis } from '../../style';\n// ============================== Mixins ==============================\nfunction segmentedDisabledItem(cls, token) {\n  return {\n    [`${cls}, ${cls}:hover, ${cls}:focus`]: {\n      color: token.colorTextDisabled,\n      cursor: 'not-allowed'\n    }\n  };\n}\nfunction getSegmentedItemSelectedStyle(token) {\n  return {\n    backgroundColor: token.bgColorSelected,\n    boxShadow: token.boxShadow\n  };\n}\nconst segmentedTextEllipsisCss = Object.assign({\n  overflow: 'hidden'\n}, textEllipsis);\n// ============================== Styles ==============================\nconst genSegmentedStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-block',\n      padding: token.segmentedContainerPadding,\n      color: token.labelColor,\n      backgroundColor: token.bgColor,\n      borderRadius: token.borderRadius,\n      transition: `all ${token.motionDurationMid} ${token.motionEaseInOut}`,\n      [`${componentCls}-group`]: {\n        position: 'relative',\n        display: 'flex',\n        alignItems: 'stretch',\n        justifyItems: 'flex-start',\n        width: '100%'\n      },\n      // RTL styles\n      '&&-rtl': {\n        direction: 'rtl'\n      },\n      // block styles\n      '&&-block': {\n        display: 'flex'\n      },\n      [`&&-block ${componentCls}-item`]: {\n        flex: 1,\n        minWidth: 0\n      },\n      // item styles\n      [`${componentCls}-item`]: {\n        position: 'relative',\n        textAlign: 'center',\n        cursor: 'pointer',\n        transition: `color ${token.motionDurationMid} ${token.motionEaseInOut}`,\n        borderRadius: token.borderRadiusSM,\n        '&-selected': Object.assign(Object.assign({}, getSegmentedItemSelectedStyle(token)), {\n          color: token.labelColorHover\n        }),\n        '&::after': {\n          content: '\"\"',\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          top: 0,\n          insetInlineStart: 0,\n          borderRadius: token.borderRadiusSM,\n          transition: `background-color ${token.motionDurationMid}`\n        },\n        [`&:hover:not(${componentCls}-item-selected):not(${componentCls}-item-disabled)`]: {\n          color: token.labelColorHover,\n          '&::after': {\n            backgroundColor: token.bgColorHover\n          }\n        },\n        '&-label': Object.assign({\n          minHeight: token.controlHeight - token.segmentedContainerPadding * 2,\n          lineHeight: `${token.controlHeight - token.segmentedContainerPadding * 2}px`,\n          padding: `0 ${token.segmentedPaddingHorizontal}px`\n        }, segmentedTextEllipsisCss),\n        // syntactic sugar to add `icon` for Segmented Item\n        '&-icon + *': {\n          marginInlineStart: token.marginSM / 2\n        },\n        '&-input': {\n          position: 'absolute',\n          insetBlockStart: 0,\n          insetInlineStart: 0,\n          width: 0,\n          height: 0,\n          opacity: 0,\n          pointerEvents: 'none'\n        }\n      },\n      // size styles\n      '&&-lg': {\n        borderRadius: token.borderRadiusLG,\n        [`${componentCls}-item-label`]: {\n          minHeight: token.controlHeightLG - token.segmentedContainerPadding * 2,\n          lineHeight: `${token.controlHeightLG - token.segmentedContainerPadding * 2}px`,\n          padding: `0 ${token.segmentedPaddingHorizontal}px`,\n          fontSize: token.fontSizeLG\n        },\n        [`${componentCls}-item-selected`]: {\n          borderRadius: token.borderRadius\n        }\n      },\n      '&&-sm': {\n        borderRadius: token.borderRadiusSM,\n        [`${componentCls}-item-label`]: {\n          minHeight: token.controlHeightSM - token.segmentedContainerPadding * 2,\n          lineHeight: `${token.controlHeightSM - token.segmentedContainerPadding * 2}px`,\n          padding: `0 ${token.segmentedPaddingHorizontalSM}px`\n        },\n        [`${componentCls}-item-selected`]: {\n          borderRadius: token.borderRadiusXS\n        }\n      }\n    }), segmentedDisabledItem(`&-disabled ${componentCls}-item`, token)), segmentedDisabledItem(`${componentCls}-item-disabled`, token)), {\n      // thumb styles\n      [`${componentCls}-thumb`]: Object.assign(Object.assign({}, getSegmentedItemSelectedStyle(token)), {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        width: 0,\n        height: '100%',\n        padding: `${token.paddingXXS}px 0`,\n        borderRadius: token.borderRadiusSM,\n        [`& ~ ${componentCls}-item:not(${componentCls}-item-selected):not(${componentCls}-item-disabled)::after`]: {\n          backgroundColor: 'transparent'\n        }\n      }),\n      // transition effect when `appear-active`\n      [`${componentCls}-thumb-motion-appear-active`]: {\n        transition: `transform ${token.motionDurationSlow} ${token.motionEaseInOut}, width ${token.motionDurationSlow} ${token.motionEaseInOut}`,\n        willChange: 'transform, width'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Segmented', token => {\n  const {\n    lineWidthBold,\n    lineWidth,\n    colorTextLabel,\n    colorText,\n    colorFillSecondary,\n    colorBgLayout,\n    colorBgElevated\n  } = token;\n  const segmentedToken = mergeToken(token, {\n    segmentedPaddingHorizontal: token.controlPaddingHorizontal - lineWidth,\n    segmentedPaddingHorizontalSM: token.controlPaddingHorizontalSM - lineWidth,\n    segmentedContainerPadding: lineWidthBold,\n    labelColor: colorTextLabel,\n    labelColorHover: colorText,\n    bgColor: colorBgLayout,\n    bgColorHover: colorFillSecondary,\n    bgColorSelected: colorBgElevated\n  });\n  return [genSegmentedStyle(segmentedToken)];\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}